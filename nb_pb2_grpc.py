# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import nb_pb2 as nb__pb2


class TrainStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.TrainClassifier = channel.unary_unary(
        '/nbclassifier.Train/TrainClassifier',
        request_serializer=nb__pb2.TrainRequest.SerializeToString,
        response_deserializer=nb__pb2.TrainReply.FromString,
        )


class TrainServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def TrainClassifier(self, request, context):
    """sends a train request
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TrainServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'TrainClassifier': grpc.unary_unary_rpc_method_handler(
          servicer.TrainClassifier,
          request_deserializer=nb__pb2.TrainRequest.FromString,
          response_serializer=nb__pb2.TrainReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nbclassifier.Train', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class PredictStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Predictor = channel.unary_unary(
        '/nbclassifier.Predict/Predictor',
        request_serializer=nb__pb2.PredictRequest.SerializeToString,
        response_deserializer=nb__pb2.PredictReply.FromString,
        )


class PredictServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Predictor(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PredictServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Predictor': grpc.unary_unary_rpc_method_handler(
          servicer.Predictor,
          request_deserializer=nb__pb2.PredictRequest.FromString,
          response_serializer=nb__pb2.PredictReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nbclassifier.Predict', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
